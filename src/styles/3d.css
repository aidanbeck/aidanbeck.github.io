.scene {
    width: 1000px;
    height: 1000px;
    margin: 0;
    perspective: 1000px;

    background-color: aqua;
}

.ðŸ§Š {
    position: absolute;
    transform-style: preserve-3d;

    translate: 500px 1000px -105px;
    transition: transform 2s;

    --width: 400px;
    --height: 400px;
    --depth: 150px;
}
.ðŸ§Š:hover {
    transform: rotateX(0deg)
               rotateY(180deg)
               rotateZ(0deg);
}


.ðŸ§Šorigin {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: blue;
    border-left: 2px solid black;
}

.ðŸ§Šface {
    position: absolute;

    width: var(--width);
    height: var(--height);

    background-color: white;
    font-size: 800%;
    text-align: center;
    padding: 1px; /* gets rid of edge gaps */
}
.ðŸ§Šface:hover {
    opacity: 50%;
    background-color: red;
    outline: 4px solid black;
    outline-offset: -4px;
    color: white;
    
}

.ðŸ§Šface.N {
    transform:  rotateX(0deg)
                rotateY(0deg)
                rotateZ(0deg)
                translate3d(
                    calc( var(--width) / -2),
                    calc( var(--height) * -1),
                    calc( var(--depth) / 2)
                );
}

.ðŸ§Šface.S {
    transform: rotateX(0deg)
               rotateY(180deg)
               rotateZ(0deg)
               translate3d(
                    calc( var(--width) / 2),
                    calc( var(--height) * -1),
                    calc( var(--depth) / 2)
                );
               
}

.ðŸ§Šface.E {
    width: var(--depth);
    transform: rotateX(0deg)
               rotateY(-90deg)
               rotateZ(0deg)
               translate3d(
                    0px,
                    calc( var(--height) * -1),
                    calc( var(--depth) / 2 + var(--width) / 2)
                );
}

.ðŸ§Šface.W {
    width: var(--depth);
    transform: rotateX(0deg)
               rotateY(90deg)
               rotateZ(0deg)
               /* translate3d(0px, -200px, 0px) */
               translate3d(
                    0px,
                    calc( var(--height) * -1),
                    calc( var(--depth) / 2 )
                );
}

.ðŸ§Šface.U {
    height: var(--depth);
    transform: rotateX(90deg)
               rotateY(0deg)
               rotateZ(0deg)
               translate3d(
                    calc( var(--depth) * -1),
                    0px,
                    calc( var(--height) + var(--depth) / 2)
                );
}

.ðŸ§Šface.D {
    height: var(--depth);
    transform: rotateX(-90deg)
               rotateY(0deg)
               rotateZ(0deg)
               translate3d(
                    calc( var(--width) / -1.5),
                    0px,
                    calc( var(--depth) / -2)
                );
}